#nginx的配置是文件
user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##
        server {
                listen 80;
                server_name 127.0.0.1; #绑定的域名或公网ip
                location / {
                        try_files $uri $uri/ =404;
                }
                #文件上传后台web页面
                location /uploadfiles {
                        alias /var/www/html;
                        index uploadfiles.html;
                }
                #文件下载路径
                location /file {
                        alias /var/www/esp32_dir/ota_dir/esp32_ota;
                        autoindex on; # 开启目录浏览功能
                }

                location /api/data {    #这行定义了一个 location 块，用于匹配以 /api/data 开头的请求。所有匹配的请求都会按照这个块中的配置进行处理。
                        #这行设置了反向代理的目标地址。所有匹配 /api/data 的请求都会被转发到 http://127.0.0.1:8080/api/data。这意味着 Nginx 会将请求转发给本地的 8080 端口上的服务
                        proxy_pass http://127.0.0.1:8080/api/data;
                        #这行设置了 HTTP 请求头中的 Host 字段。$host 是一个 Nginx 变量，表示请求中的主机名。这样，代理服务可以知道原始请求的主机名。
                        proxy_set_header Host $host;
                        #这行设置了 HTTP 请求头中的 X-Real-IP 字段。$remote_addr 是一个 Nginx 变量，表示客户端的 IP 地址。这样，代理服务可以知道原始请求的客户端 IP 地址
                        proxy_set_header X-Real-IP $remote_addr;
                        #这行设置了 HTTP 请求头中的 X-Forwarded-For 字段。$proxy_add_x_forwarded_for 是一个 Nginx 变量，表示原始请求的 X-Forwarded-For 头的值。这样，代理服务可以知道原始请求的来源 IP 地址。
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        #这行设置了 HTTP 请求头中的 X-Forwarded-Proto 字段。$scheme 是一个 Nginx 变量，表示请求的协议（HTTP 或 HTTPS）。这样，代理服务可以知道原始请求的协议。
                        proxy_set_header X-Forwarded-Proto $scheme;
                }
                #文件上传的api
                location /api/upload {
                        client_max_body_size 10M;
                        proxy_pass http://127.0.0.1:8080/api/upload;
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;
                }
        }
        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in:_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}
                                                  